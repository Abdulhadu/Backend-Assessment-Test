# Generated by Django 4.2.25 on 2025-10-10 06:06

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('products', '0001_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_order_id', models.TextField(help_text='External system order identifier', max_length=100)),
                ('customer_name_snapshot', models.TextField(help_text='Customer name at time of order', max_length=255)),
                ('customer_email_snapshot', models.EmailField(help_text='Customer email at time of order', max_length=255)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total order amount', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('CAD', 'Canadian Dollar')], default='USD', max_length=3)),
                ('order_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('order_date', models.DateTimeField(help_text='Order placement date')),
                ('raw_payload', models.JSONField(blank=True, default=dict, help_text='Raw order data from external system')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Order creation timestamp')),
                ('customer', models.ForeignKey(blank=True, db_column='customer_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='customers.customer')),
                ('tenant', models.ForeignKey(db_column='tenant_id', on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('order_item_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(help_text='Item quantity', validators=[django.core.validators.MinValueValidator(1)])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at time of order', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('line_total', models.DecimalField(decimal_places=2, help_text='Total line amount (quantity * unit_price)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='orders.order')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='products.product')),
                ('tenant', models.ForeignKey(db_column='tenant_id', on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'db_table': 'order_items',
                'indexes': [models.Index(fields=['tenant', 'product'], name='order_items_tenant_product_idx'), models.Index(fields=['order'], name='order_items_order_idx'), models.Index(fields=['product'], name='order_items_product_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'order_date', 'order_status'], name='orders_tenant_date_status_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'external_order_id'], name='orders_tenant_external_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer'], name='orders_customer_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_date'], name='orders_order_date_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_status'], name='orders_status_idx'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.UniqueConstraint(fields=('tenant', 'external_order_id'), name='unique_tenant_external_order'),
        ),
    ]
