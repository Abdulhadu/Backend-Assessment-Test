# Generated by Django 4.2.25 on 2025-10-10 06:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockLevel',
            fields=[
                ('product', models.OneToOneField(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='stock_level', serialize=False, to='products.product')),
                ('available', models.PositiveIntegerField(default=0, help_text='Current available stock level', validators=[django.core.validators.MinValueValidator(0)])),
                ('last_updated', models.DateTimeField(auto_now=True, help_text='Last stock level update')),
                ('tenant', models.ForeignKey(db_column='tenant_id', on_delete=django.db.models.deletion.CASCADE, related_name='stock_levels', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Stock Level',
                'verbose_name_plural': 'Stock Levels',
                'db_table': 'stock_levels',
                'indexes': [models.Index(fields=['tenant'], name='stock_levels_tenant_idx'), models.Index(fields=['available'], name='stock_levels_available_idx'), models.Index(fields=['last_updated'], name='stock_levels_last_updated_idx')],
            },
        ),
        migrations.CreateModel(
            name='StockEvent',
            fields=[
                ('stock_event_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('delta', models.IntegerField(help_text='Stock level change (positive for increase, negative for decrease)')),
                ('resulting_level', models.PositiveIntegerField(blank=True, help_text='Stock level after this event', null=True)),
                ('event_time', models.DateTimeField(help_text='When the stock event occurred')),
                ('source', models.CharField(choices=[('manual', 'Manual Adjustment'), ('order', 'Order Fulfillment'), ('receipt', 'Stock Receipt'), ('return', 'Return Processing'), ('adjustment', 'Inventory Adjustment'), ('system', 'System Generated')], help_text='Source of the stock event', max_length=20)),
                ('meta', models.JSONField(blank=True, default=dict, help_text='Additional event metadata')),
                ('product', models.ForeignKey(db_column='product_id', on_delete=django.db.models.deletion.CASCADE, related_name='stock_events', to='products.product')),
                ('tenant', models.ForeignKey(db_column='tenant_id', on_delete=django.db.models.deletion.CASCADE, related_name='stock_events', to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Stock Event',
                'verbose_name_plural': 'Stock Events',
                'db_table': 'stock_events',
                'indexes': [models.Index(fields=['product', 'event_time'], name='stock_events_product_time_idx'), models.Index(fields=['tenant', 'event_time'], name='stock_events_tenant_time_idx'), models.Index(fields=['source'], name='stock_events_source_idx'), models.Index(fields=['event_time'], name='stock_events_event_time_idx')],
            },
        ),
    ]
