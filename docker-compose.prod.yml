version: "3.8"

services:
  # Django Web Application
  web:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings.dev
      - REDIS_URL=redis://redis:6379/1
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=localDB
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Redis for Celery broker/result backend
  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Celery Worker
  celery_worker:
    build: .
    restart: unless-stopped
    command: celery -A main worker -l info -Q celery --concurrency=1
    depends_on:
      - redis
      - web
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings.dev
      - REDIS_URL=redis://redis:6379/1
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=localDB
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - .:/app

  # Celery Beat Scheduler
  celery_beat:
    build: .
    restart: unless-stopped
    command: celery -A main beat -l info
    depends_on:
      - redis
      - web
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings.dev
      - REDIS_URL=redis://redis:6379/1
    volumes:
      - .:/app

  # Nginx (for production-like setup)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  static_volume:
  media_volume:
  redis_data:
